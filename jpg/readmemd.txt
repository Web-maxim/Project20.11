# Сетевой чат

## 1. Реализация сетевого чата
Цель работы выполнена: чат был доработан до сетевого уровня.

- Выбрана архитектура **клиент–сервер**.  
- Используется **TCP-соединение** (более надёжное для передачи текста).  
- Сервер принимает несколько клиентов, каждому назначается логин.  
- Клиенты могут обмениваться сообщениями через сервер в реальном времени.  
- Программа запускается в трёх режимах:  
  1. Локальный чат (консольная версия для одного пользователя)  
  2. Сервер  
  3. Клиент  

## 2. Кроссплатформенность (*задание со звёздочкой)
В проекте частично учтена поддержка Windows и Linux:

- Использованы условные компиляционные блоки `#ifdef _WIN32` для подключения разных библиотек сокетов (`winsock2.h` в Windows и `<sys/socket.h>` в Linux).  
- Определены универсальные типы `SOCKET`, `INVALID_SOCKET`, `SOCKET_ERROR` для выравнивания различий между платформами.  

Таким образом, большая часть кроссплатформенной основы уже реализована.  

### Дальнейшие шаги для полноценной кроссплатформенности:
- Отладить сборку и запуск в Linux (например, через g++).  
- Использовать CMake для удобства сборки под разные ОС.  
- Протестировать корректность работы ввода/вывода в консоли (особенно для русского текста).  
